let files={},imports={};const delay=e=>new Promise((t=>setTimeout(t,e)));async function SFile(e){return new Promise(((t,i)=>{files[e]?t(files[e]):fetch(e).then((async i=>{i=await i.text(),files[e]=i,t(i)}))}))}function SUpdate(){document.head.innerHTML+="<style>htms{display:none ! important}</style>";let SMainElem=Array.from(document.getElementsByTagName("htms"));if(SMainElem.length>1)console.warn("Multiple htms elements provided, only the first one will take effect");else if(SMainElem.length<1)return void console.warn("HTMS was included but no config was detected");SMainElem=SMainElem[0];let SFig=SMainElem.innerHTML.split("\n").filter((e=>e.length>0));SFig=SFig.map((e=>e.split(" ").filter((e=>e.length>0)).join(" "))),SFig=SFig.filter((e=>e.length>0)),SFig=SFig.filter((e=>!e.startsWith("//")));for(let line in SFig){line=SFig[line];let args=line.split(" "),action=args[0];if("import"==action){if("from"!=args[2])throw new Error('Import missing "from"');args[3]=args[3].slice(1,args[3].length-1),SFile(args[3]).then((e=>{args[1].split(",").map((e=>e.slice(1,e.length-1))).forEach((t=>{let i=new RegExp('<sample .*?name="'+t+'".*?>[^âœ“]*?</sample>');imports[t]=e.match(i)[0].replaceAll(/<sample .+?>|<\/sample>/g,"").trim()}))}))}else if("inject"==action){if("with"!=args[2])throw new Error('Inject missing "with"');Array.from(document.getElementsByTagName(args[1].slice(1,args[1].length-1))).forEach((async e=>{for(let t=0;t<5;t++)imports[args[3].slice(1,args[3].length-1)]||await delay(500);if(!imports[args[3].slice(1,args[3].length-1)])throw new Error(args[3].slice(1,args[3].length-1)+" was not defined when inject loaded");{let t=imports[args[3].slice(1,args[3].length-1)];(e.attributes["var"]||"").value&&e.attributes["var"].value.split(";").filter((e=>e.length)).forEach((e=>{t=t.replaceAll("${"+e.split(":")[0]+"}",e.split(":")[1])})),e.innerHTML=t}}))}else{if("module"!=action)throw new Error(action+" Is not a valid action");fetch("https://htms.fsh.plus/module/"+args[1].slice(1,args[1].length-1)+"/module.js").then((async h=>{h=await h.text(),eval(h)}))}}var Sload=new Event("SLoad");document.dispatchEvent(Sload)}document.addEventListener("DOMContentLoaded",SUpdate),window.SUpdate=SUpdate;
